RIASSUNTO:

Idea:
	Social network delle ricette, si può creare una ricetta, inserirla e vedere quelle degli altri utenti, potendole anche salvare e quindi fare proprie. 

Cose da fare:
	1. Creare ricette, home con tutte le ricette create, pagina/modale visualizzazione singola ricetta, searchbar, filtro ricette a seconda di type, diff, price, healthy, etc..
	2. Rendere il tutto social media, quindi nella home vedere ricette di altri utenti, trasformare vecchia home in myrecipes e creare savedrecipe section.
	3. Permettere agli utenti di seguirsi e quindi visualizzare le ricette di quella persona, quindi dividere home in profili seguiti, profili consigliati, etc...
	4. Creare logica di like e commenti per le singole ricette con annesse notifiche.

Pagine:
	- pagina registrazione/login. [/]
	- pagina home con profili seguiti, ricette popolari, ricette suggerite. [navbar]
	- pagina myrecipes dove si vedono tutte le proprie ricette ed in un tab separato le proprie + quelle salvate. [navbar]
	- pagina createrecipe dove si crea una recipe. [navbar]
	- pagina visualizzazione ricetta, con tutte info complete quindi steps etc... + sotto ricette suggerite. [/]
	- pagina profili utente, dove si vedono profili seguiti, ricette, immagine profilo, banner, descrizione profilo, etc... [navbar]

Front-end:
	- Start: cd in client, npm start
	- Learning:
		-- Components e pages sono due cose diverse, i componenti sono elementi singoli che si riutilizzano, le pagine sono intere pagine in cui si usano i componenti ad esempio.
		-- Cookies e LocalStorage
	
Back-end:
	- Start server: cd in server poi node src/index.js OR npm start avendo aggiunto lo script in package json.

	- Dependencies: 
		-- express cors bcrypt jsonwebtoken mongoose nodemon node

	- Learning:
		-- In node, per far si di vedere applicate le modifiche al file index.js, bisogna andare in package.json e negli script mettere start e il path di index.js.
		-- Ci sono due modi di importare le cose, require ed import, per usare il secondo bisogna mettere type module in package.json.
		-- Postman, si usa per inviare richieste post e get e verificare endpoint applicazione senza avere front-end.
		-- barrel import pattern, sostanzialmente nella cartella dei componenti si crea un index.js con dentro tutti gli import e solo l'export di tutti, poi dove
			servono questi componenti si importano tutti i componenti insieme dalla cartella, javascript cercherà automaticamente index.js e quindi funziona.



